// @ts-nocheck
const express=require("express"),cors=require("cors"),helmet=require("helmet"),bcrypt=require("bcryptjs"),jwt=require("jsonwebtoken");require("dotenv").config();const app=express(),PORT=process.env.PORT||3001;app.use(helmet()),app.use(cors({origin:["http://localhost:3000","http://127.0.0.1:3000"],credentials:!0,methods:["GET","POST","PUT","DELETE","OPTIONS"],allowedHeaders:["Content-Type","Authorization"]})),app.use(express.json());const users=[{id:1,email:"admin@fieldviz.com",password:"password123",name:"Demo Admin",role:"admin"},{id:2,email:"engineer@fieldviz.com",password:"password123",name:"Field Engineer",role:"engineer"}],mockDashboardData=[{date:"2024-07-22",oil_production:1200,gas_production:3800,wellhead_pressure:2100,temperature:185},{date:"2024-07-23",oil_production:1180,gas_production:3750,wellhead_pressure:2140,temperature:183},{date:"2024-07-24",oil_production:1220,gas_production:3900,wellhead_pressure:2160,temperature:187},{date:"2024-07-25",oil_production:1190,gas_production:3820,wellhead_pressure:2145,temperature:184},{date:"2024-07-26",oil_production:1240,gas_production:3950,wellhead_pressure:2170,temperature:189},{date:"2024-07-27",oil_production:1210,gas_production:3870,wellhead_pressure:2155,temperature:186},{date:"2024-07-28",oil_production:1250,gas_production:3920,wellhead_pressure:2165,temperature:188}],authenticate=(e,a,r)=>{const t=e.header("Authorization")?.replace("Bearer ","");if(!t)return a.status(401).json({error:"No token provided"});try{const o=jwt.verify(t,process.env.JWT_SECRET),s=users.find((e=>e.id===o.userId));if(!s)return a.status(401).json({error:"Invalid token"});e.user=s,r()}catch(e){a.status(401).json({error:"Invalid token"})}};app.post("/api/auth/login",(async(e,a)=>{try{const{email:r,password:t}=e.body;if(console.log("🔑 BACKEND: Login attempt for:",r),console.log("🔑 BACKEND: Password received:",t),!r||!t)return console.log("❌ BACKEND: Missing email or password"),a.status(400).json({error:"Email and password are required"});const o=users.find((e=>e.email===r));if(!o)return console.log("❌ BACKEND: User not found:",r),a.status(401).json({error:"Invalid credentials"});console.log("✅ BACKEND: User found:",o.email),console.log("🔑 BACKEND: Expected password:",o.password);const s=t===o.password;if(console.log("🔑 BACKEND: Password valid:",s),!s)return console.log("❌ BACKEND: Invalid password for:",r),a.status(401).json({error:"Invalid credentials"});const n=jwt.sign({userId:o.id},process.env.JWT_SECRET,{expiresIn:"24h"});console.log("✅ BACKEND: Login successful for:",r),a.json({token:n,user:{id:o.id,email:o.email,name:o.name,role:o.role}})}catch(e){console.error("❌ BACKEND: Login error:",e),a.status(500).json({error:"Internal server error"})}})),app.get("/api/auth/profile",authenticate,((e,a)=>{a.json({user:{id:e.user.id,email:e.user.email,name:e.user.name,role:e.user.role}})})),app.get("/api/data/dashboard",authenticate,((e,a)=>{try{a.json({success:!0,data:mockDashboardData})}catch(e){console.error("Dashboard error:",e),a.status(500).json({error:"Failed to fetch dashboard data"})}})),app.get("/api/data/metrics",authenticate,((e,a)=>{try{const e=mockDashboardData[mockDashboardData.length-1],r={oil_production:{current:e.oil_production,unit:"BBL",date:e.date},gas_production:{current:e.gas_production,unit:"MCF",date:e.date},wellhead_pressure:{current:e.wellhead_pressure,unit:"PSI",date:e.date},temperature:{current:e.temperature,unit:"°F",date:e.date}};a.json({success:!0,metrics:r})}catch(e){console.error("Metrics error:",e),a.status(500).json({error:"Failed to fetch metrics"})}})),app.post("/api/data/field-data",authenticate,((e,a)=>{try{const{report_id:r,field_data:t}=e.body;console.log("Saving field data:",{report_id:r,field_data:t}),a.json({success:!0,message:"Field data saved successfully"})}catch(e){console.error("Save field data error:",e),a.status(500).json({error:"Failed to save field data"})}})),app.post("/api/upload/images",authenticate,((e,a)=>{try{console.log("Image upload request received"),a.json({success:!0,report_id:Math.floor(1e3*Math.random()),uploaded_files:1,message:"Files uploaded successfully"})}catch(e){console.error("Upload error:",e),a.status(500).json({error:"Upload failed"})}})),app.get("/api/health",((e,a)=>{a.json({status:"OK",message:"FieldViz API is running",version:"1.0.0",timestamp:(new Date).toISOString()})})),app.use("*",((e,a)=>{a.status(404).json({error:"Route not found"})})),app.use(((e,a,r,t)=>{console.error("Unhandled error:",e),r.status(500).json({error:"Internal server error"})})),app.listen(PORT,(()=>{console.log(`🚀 FieldViz backend running on port ${PORT}`),console.log(`📊 API Health: http://localhost:${PORT}/api/health`),console.log(`🔗 Frontend: ${process.env.FRONTEND_URL}`),console.log(""),console.log("Demo Credentials:"),console.log("📧 admin@fieldviz.com / password123"),console.log("📧 engineer@fieldviz.com / password123")})),app.post("/api/field-data",authenticate,((e,a)=>{try{const{extractedData:r,uploadedAt:t,processingMethod:o,reportDate:s,fieldName:n}=e.body;if(console.log("📊 OCR Data received:",{userId:e.user.id,fieldName:n,reportDate:s,parametersCount:r?.length||0,processingMethod:o}),!r||!Array.isArray(r))return a.status(400).json({error:"extractedData is required and must be an array"});if(0===r.length)return a.status(400).json({error:"No field data provided"});const d=r.map(((e,a)=>{if(!e.parameter||!e.value||!e.unit)throw new Error(`Invalid data at index ${a}: missing parameter, value, or unit`);const r=parseFloat(e.value);return isNaN(r)&&console.warn(`Non-numeric value detected: ${e.parameter} = ${e.value}`),{id:e.id||`param-${a}`,parameter:e.parameter.trim(),value:e.value.trim(),numericValue:isNaN(r)?null:r,unit:e.unit.trim(),confidence:e.confidence||0,originalText:e.originalText||"",processedAt:(new Date).toISOString()}})),i=Math.floor(1e6*Math.random()),l={id:i,userId:e.user.id,fieldName:n||"Unknown Field",reportDate:s||(new Date).toISOString().split("T")[0],uploadedAt:t||(new Date).toISOString(),processingMethod:o||"OCR",status:"processed",parametersCount:d.length,averageConfidence:d.reduce(((e,a)=>e+a.confidence),0)/d.length,data:d};console.log("💾 Report saved:",{reportId:i,field:l.fieldName,date:l.reportDate,parameters:l.parametersCount,avgConfidence:Math.round(100*l.averageConfidence)+"%"}),a.json({success:!0,message:"Field data saved successfully",reportId:i,parametersProcessed:d.length,averageConfidence:l.averageConfidence,data:{validatedParameters:d.map((e=>({parameter:e.parameter,value:e.value,unit:e.unit,confidence:Math.round(100*e.confidence)+"%"})))}})}catch(e){console.error("❌ OCR data save error:",e),a.status(500).json({error:"Failed to save field data",details:e.message})}})),app.get("/api/field-data/reports",authenticate,((e,a)=>{try{const{page:r=1,limit:t=10,field:o,dateFrom:s,dateTo:n}=e.query,d=[{id:1,fieldName:"West Texas Field A",reportDate:"2024-07-28",uploadedAt:"2024-07-28T10:30:00Z",parametersCount:4,averageConfidence:.85,status:"processed"},{id:2,fieldName:"North Dakota Field B",reportDate:"2024-07-27",uploadedAt:"2024-07-27T14:15:00Z",parametersCount:5,averageConfidence:.78,status:"processed"}];a.json({success:!0,reports:d,pagination:{page:parseInt(r),limit:parseInt(t),total:d.length,pages:Math.ceil(d.length/t)}})}catch(e){console.error("Reports fetch error:",e),a.status(500).json({error:"Failed to fetch reports"})}})),app.get("/api/field-data/reports/:reportId",authenticate,((e,a)=>{try{const{reportId:r}=e.params,t={id:parseInt(r),fieldName:"West Texas Field A",reportDate:"2024-07-28",uploadedAt:"2024-07-28T10:30:00Z",processingMethod:"OCR",status:"processed",parametersCount:4,averageConfidence:.85,data:[{id:"oil-1",parameter:"Oil Production",value:"1247",numericValue:1247,unit:"BBL",confidence:.94,originalText:"Oil Production: 1247 BBL",processedAt:"2024-07-28T10:30:15Z"},{id:"gas-1",parameter:"Gas Production",value:"3891",numericValue:3891,unit:"MCF",confidence:.76,originalText:"Gas Production: 3891 MCF",processedAt:"2024-07-28T10:30:15Z"},{id:"pressure-1",parameter:"Wellhead Pressure",value:"2156",numericValue:2156,unit:"PSI",confidence:.89,originalText:"Wellhead Pressure: 2156 PSI",processedAt:"2024-07-28T10:30:15Z"},{id:"temp-1",parameter:"Temperature",value:"187",numericValue:187,unit:"°F",confidence:.82,originalText:"Temperature: 187°F",processedAt:"2024-07-28T10:30:15Z"}]};a.json({success:!0,report:t})}catch(e){console.error("Report detail error:",e),a.status(500).json({error:"Failed to fetch report details"})}})),app.put("/api/field-data/:dataId",authenticate,((e,a)=>{try{const{dataId:r}=e.params,{value:t,unit:o,confidence:s}=e.body;if(!t||!o)return a.status(400).json({error:"Value and unit are required"});console.log("📝 Updating field data:",{dataId:r,value:t,unit:o,confidence:s,updatedBy:e.user.id}),a.json({success:!0,message:"Field data updated successfully",updatedData:{id:r,value:t,unit:o,confidence:s,updatedAt:(new Date).toISOString()}})}catch(e){console.error("Data update error:",e),a.status(500).json({error:"Failed to update field data"})}})),app.delete("/api/field-data/:dataId",authenticate,((e,a)=>{try{const{dataId:r}=e.params;console.log("🗑️ Deleting field data:",{dataId:r,deletedBy:e.user.id}),a.json({success:!0,message:"Field data deleted successfully"})}catch(e){console.error("Data delete error:",e),a.status(500).json({error:"Failed to delete field data"})}})),app.get("/api/field-data/stats",authenticate,((e,a)=>{try{const e={totalReports:156,totalParameters:624,averageConfidence:.83,topFields:[{name:"West Texas Field A",reportCount:45},{name:"North Dakota Field B",reportCount:32},{name:"Oklahoma Field C",reportCount:28}],parameterDistribution:{"Oil Production":156,"Gas Production":156,"Wellhead Pressure":145,Temperature:138,"Water Cut":89,"Flow Rate":67},confidenceDistribution:{high:421,medium:152,low:51},monthlyReports:[{month:"Jan",count:18},{month:"Feb",count:22},{month:"Mar",count:19},{month:"Apr",count:24},{month:"May",count:21},{month:"Jun",count:26},{month:"Jul",count:26}]};a.json({success:!0,stats:e})}catch(e){console.error("Stats error:",e),a.status(500).json({error:"Failed to fetch statistics"})}})),app.post("/api/field-data/bulk-approve",authenticate,((e,a)=>{try{const{dataIds:r,minConfidence:t=.8}=e.body;if(!r||!Array.isArray(r))return a.status(400).json({error:"dataIds array is required"});console.log("✅ Bulk approving field data:",{count:r.length,minConfidence:t,approvedBy:e.user.id}),a.json({success:!0,message:`${r.length} field data points approved`,approvedCount:r.length})}catch(e){console.error("Bulk approve error:",e),a.status(500).json({error:"Failed to bulk approve data"})}}));