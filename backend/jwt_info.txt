A JSON Web Token or JWT is made up of three parts:

The header: contains some metadata about the token itself.
The payload: contains the data that we want to encode into the token, 
so the more data we want to encode here the bigger is the JWT.
The signature.
These first two parts, the header and the payload, are just plain text 
that will get encoded, but not encrypted.

So anyone will be able to decode them and read them, we cannot store any sensitive data in here. 
But that's not a problem at all because in the third part, the signature, is where things really get 
interesting. The signature is created using the header, the payload, and the secret that is saved on the server.

And this whole process is then called signing the Json Web Token. The signing algorithm takes the header, 
the payload, and the secret to create a unique signature. So only this data plus the secret can create this 
signature. Then together with the header and the payload, these signature forms the JWT, 
which then gets sent to the client.